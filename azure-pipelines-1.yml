trigger:
- master   # adjust if your main branch is called 'main'

pool:
  vmImage: ubuntu-latest

variables:
  NODE_VERSION: '18.x'                # compatible with Next.js
  azureSubscription: 'VShareAppPCon'  # your service connection name
  appName: 'VShareAppP'               # your Web App name

steps:
# 1️⃣ Install Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '$(NODE_VERSION)'
  displayName: 'Install Node.js'

# 2️⃣ Debug Node/NPM versions
- script: |
    cd JoShot-VibeShare
    node -v
    npm -v
  displayName: 'Check Node & NPM versions'

# 3️⃣ Install dependencies & build Next.js
- script: |
    cd JoShot-VibeShare
    npm ci
    npm run build
  displayName: 'Install dependencies & build Next.js'

# 4️⃣ Debug .next folder contents (verify standalone build)
- script: |
    cd JoShot-VibeShare
    echo "Listing .next contents:"
    ls -R .next
  displayName: 'List .next folder contents'

# 5️⃣ Archive the standalone build
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'JoShot-VibeShare/.next/standalone'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true
  displayName: 'Archive standalone build'

# 6️⃣ Publish build artifact
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/app.zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish build artifact'

# 7️⃣ Deploy to Azure Web App
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'VibeShare-ARM-Connection'
    appName: 'JoShotVibeShare'
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
  displayName: 'Deploy to Azure Web App'
